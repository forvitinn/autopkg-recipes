<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Imports cone into Munki.</string>
	<key>Identifier</key>
	<string>com.github.johnmikee.munki.cone</string>
	<key>Input</key>
	<dict>
		<key>MUNKI_REPO_SUBDIR</key>
		<string>apps</string>
		<key>NAME</key>
		<string>cone</string>
		<key>pkginfo</key>
		<dict>
			<key>catalogs</key>
			<array>
				<string>testing</string>
			</array>
			<key>description</key>
			<string>Cone is a robust command-line tool from ConductorOne! Written in Go, cone is designed to streamline the use-case-specific tasks for developers, security teams, and other end users.</string>
			<key>developer</key>
			<string>ConductorOne</string>
			<key>display_name</key>
			<string>cone</string>
			<key>name</key>
			<string>%NAME%</string>
			<key>unattended_install</key>
			<true/>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>0.6.1</string>
	<key>ParentRecipe</key>
	<string>com.github.johnmikee.pkg.cone</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>installcheck_script</key>
                    <string>#!/usr/local/munki/munki-python

from distutils.version import LooseVersion
import os
import subprocess
import sys
import warnings

# munki doesnt have packaging, so we need to ignore the warning
warnings.filterwarnings("ignore",category=DeprecationWarning)

def main():
    '''
        Returns the the version from cone

        Non-0 exit means cone is at or above the version in munki.
    '''

    cone_path = '/usr/local/bin/cone'
    munki_version = '0.0.15'
    binary_version = None

    if os.path.isfile(cone_path):
        try:
            binary_version = subprocess.check_output([cone_path, '-v']
                                                    ).split()[2].decode('utf-8')
        except subprocess.CalledProcessError:
            print("encountered an error when grabbing the cone version, "
                  "proceeding with install...")
            sys.exit(0)

    else:
        print("cannot find {}, installing...".format(cone_path))
        sys.exit(0)

    # check local version against munki_version
    if LooseVersion(binary_version) &lt; LooseVersion(munki_version):
        print("older version of cone found, installing...")
        sys.exit(0)
    print("version of cone is the same or newer than the munki version, skipping...")
    sys.exit(1)


if __name__ == '__main__':
    main()
</string>
                    <key>version</key>
                    <string>%version%</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pkg_path%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
